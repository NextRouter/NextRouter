/etc/nftables.conf 
#!/usr/sbin/nft -f

# 既存のルールセットをすべて削除
flush ruleset

# 変数を定義して管理を容易に
define wan1_if = INTERFACE_1
define wan2_if = INTERFACE_2
define lan_if = INTERFACE_3

table inet filter {
    # インターフェースの集合（セット）を定義
    set wan_interfaces {
        type ifname
        elements = { $wan1_if, $wan2_if }
    }

    chain input {
        type filter hook input priority filter;
        # デフォルトポリシーをdropに変更。許可されていないパケットはすべて破棄
        policy drop;

        # --- 基本的な許可ルール ---
        # 状態が無効なパケットは即座に破棄
        ct state invalid drop

        # 確立済み、または関連のある接続は許可 (戻りのパケットなど)
        ct state established,related accept

        # ループバックインターフェース(lo)からの通信はすべて許可
        iifname "lo" accept

        # --- サービスの許可ルール ---
        # WANインターフェースからのSSH (ポート22) アクセスを許可
        iifname @wan_interfaces tcp dport 22 accept

        # LANインターフェースからのDHCP (ポート67, 68) リクエストを許可 (このルーターがDHCPサーバーとして機能する場合)
        iifname $lan_if udp sport {67, 68} udp dport {67, 68} accept

        # ICMP (pingなど) を許可。トラブルシューティングに役立ちます。
        ip protocol icmp accept
        ip6 nexthdr icmpv6 accept
    }

    chain forward {
        type filter hook forward priority filter;
        # デフォルトでパケット転送をすべて拒否
        policy drop;

        # LANからWANへの通信を許可
        iifname $lan_if oifname @wan_interfaces accept

        # WANからLANへの戻りの通信 (確立済み・関連) を許可
        iifname @wan_interfaces oifname $lan_if ct state established,related accept
    }

    chain output {
        type filter hook output priority filter;
        # このルーター自身からの発信はすべて許可
        policy accept;
    }
}
table inet mangle {
    # --------------------------------------------------------------------
    # ▼▼▼ IPアドレスとWANの割り当ては、このセクションを編集するだけ ▼▼▼
    # --------------------------------------------------------------------

    # 【WAN1 (INTERFACE_1) を使うIPアドレスのグループ】
    set wan1_hosts {
        type ipv4_addr
        elements = { 
            192.168.1.100,  # ホスト100
            192.168.1.102   # ホスト102
        }
    }

    # 【WAN2 (INTERFACE_2) を使うIPアドレスのグループ】
    set wan2_hosts {
        type ipv4_addr
        elements = { 
            192.168.1.101   # ホスト101
        }
    }

    # --------------------------------------------------------------------
    # ▲▲▲ 普段の編集はここまで ▲▲▲
    # (以下のルール部分は変更する必要はありません)
    # --------------------------------------------------------------------

    chain prerouting {
        type filter hook prerouting priority mangle; policy accept;

        # "wan1_hosts" グループのIPからの通信に「マーク1」を付ける
        iifname "INTERFACE_3" ip saddr @wan1_hosts meta mark set 0x00000001

        # "wan2_hosts" グループのIPからの通信に「マーク2」を付ける
        iifname "INTERFACE_3" ip saddr @wan2_hosts meta mark set 0x00000002
    }
}

table inet nat {
    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;

        # 「マーク1」が付いた通信を INTERFACE_1 から出す
        meta mark 0x00000001 oifname "INTERFACE_1" masquerade

        # 「マーク2」が付いた通信を INTERFACE_2 から出す
        meta mark 0x00000002 oifname "INTERFACE_2" masquerade
    }
}